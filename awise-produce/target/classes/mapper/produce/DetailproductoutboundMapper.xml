<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awise.produce.mapper.DetailproductoutboundMapper">
    
    <resultMap type="Detailproductoutbound" id="DetailproductoutboundResult">
        <result property="id"    column="id"    />
        <result property="deliveryNoteID"    column="deliveryNoteID"    />
        <result property="productID"    column="productID"    />
        <result property="receiptQuantity"    column="receiptQuantity"    />
        <result property="contractID"    column="contractID"    />
        <result property="customname"    column="customname"    />
        <result property="productname"    column="productname"    />
        <result property="notes"    column="notes"    />
    </resultMap>

    <sql id="selectDetailproductoutboundVo">
        select id, deliveryNoteID, productID,  receiptQuantity, contractID, productname,  customname ,notes from aw_DetailProductOutbound
    </sql>

    <select id="selectDetailproductoutboundList" parameterType="Detailproductoutbound" resultMap="DetailproductoutboundResult">
        <include refid="selectDetailproductoutboundVo"/>
        <where>  
            <if test="deliveryNoteID != null  and deliveryNoteID != ''"> and deliveryNoteID = #{deliveryNoteID}</if>
            <if test="productID != null  and productID != ''"> and productID = #{productID}</if>
            <if test="productname != null  and productname != ''"> and productname like concat('%', #{productname}, '%')</if>
            <if test="receiptQuantity != null "> and receiptQuantity = #{receiptQuantity}</if>
            <if test="contractID != null  and contractID != ''"> and contractID = #{contractID}</if>
            <if test="customname != null  and customname != ''"> and customname like concat('%', #{customname}, '%')</if>
            <if test="notes != null  and notes != ''"> and notes like concat('%', #{notes}, '%')</if>
        </where>
    </select>
    
    <select id="selectDetailproductoutboundById" parameterType="Long" resultMap="DetailproductoutboundResult">
        <include refid="selectDetailproductoutboundVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertDetailproductoutbound" parameterType="Detailproductoutbound">
        insert into aw_DetailProductOutbound
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="deliveryNoteID != null and deliveryNoteID != ''">deliveryNoteID,</if>
            <if test="productID != null and productID != ''">productID,</if>
            <if test="productname != null">productname,</if>
            <if test="receiptQuantity != null">receiptQuantity,</if>
            <if test="contractID != null and contractID != ''">contractID,</if>
            <if test="customname != null and customname != ''">customname,</if>
            <if test="notes != null and notes != ''">notes,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="deliveryNoteID != null and deliveryNoteID != ''">#{deliveryNoteID},</if>
            <if test="productID != null and productID != ''">#{productID},</if>
            <if test="productname != null">#{productname},</if>
            <if test="receiptQuantity != null">#{receiptQuantity},</if>
            <if test="contractID != null and contractID != ''">#{contractID},</if>
            <if test="customname != null and customname != ''">#{customname},</if>
            <if test="notes != null and notes != ''">#{notes},</if>
         </trim>
    </insert>

    <update id="updateDetailproductoutbound" parameterType="Detailproductoutbound">
        update aw_DetailProductOutbound
        <trim prefix="SET" suffixOverrides=",">
            <if test="deliveryNoteID != null and deliveryNoteID != ''">deliveryNoteID = #{deliveryNoteID},</if>
            <if test="productID != null and productID != ''">productID = #{productID},</if>
            <if test="productname != null">productname = #{productname},</if>
            <if test="receiptQuantity != null">receiptQuantity = #{receiptQuantity},</if>
            <if test="contractID != null and contractID != ''">contractID = #{contractID},</if>
            <if test="customname != null and customname != ''">customname = #{customname},</if>
            <if test="notes != null and notes != ''">notes = #{notes},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDetailproductoutboundById" parameterType="Long">
        delete from aw_DetailProductOutbound where id = #{id}
    </delete>

    <delete id="deleteDetailproductoutboundByIds" parameterType="String">
        delete from aw_DetailProductOutbound where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>